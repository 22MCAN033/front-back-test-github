name: CI/CD Pipeline - Frontend & Backend (Direct EC2)

on:
  push:
    branches:
      - main

jobs:
  # ------------------- BUILD PHASE ----------------
  build:
    name: Build Docker Images (Frontend & Backend)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create build tags
        run: |
          BUILD_TAG="build-${{ github.run_id }}"
          echo "BACKEND_BUILD_TAG=${BUILD_TAG}" > backend_build_tag.txt
          echo "FRONTEND_BUILD_TAG=${BUILD_TAG}" > frontend_build_tag.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-build-tags
          path: |
            backend_build_tag.txt
            frontend_build_tag.txt

  # ------------------- DEPLOY PHASE -------------------
  deploy:
    name: Deploy Frontend & Backend to EC2
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: docker-build-tags
          path: ./build_artifacts

      - name: Send source code to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "~/app"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app
            BUILD_TAG="build-${{ github.run_id }}"
            BUILD_TIMESTAMP=$(date +%Y%m%d%H%M%S)

            echo " Starting deployment with Build Tag: ${BUILD_TAG}"

            # ------------------- BACKEND -------------------
            echo " Deploying Backend..."
            cd backend
            sudo docker build --no-cache --build-arg BUILD_TIMESTAMP=${BUILD_TIMESTAMP} -t backend-app:${BUILD_TAG} .
            sudo docker stop backend 2>/dev/null || true
            sudo docker rm backend 2>/dev/null || true
            sudo docker run -d -p 5000:5000 --name backend --restart unless-stopped backend-app:${BUILD_TAG}
            echo " Backend deployed successfully"

            # ------------------- FRONTEND -------------------
            echo " Deploying Frontend..."
            cd ../frontend
            sudo docker build --no-cache --build-arg BUILD_TIMESTAMP=${BUILD_TIMESTAMP} -t frontend-app:${BUILD_TAG} .
            sudo docker stop frontend 2>/dev/null || true
            sudo docker rm frontend 2>/dev/null || true
            sudo docker run -d -p 3000:80 --name frontend --restart unless-stopped frontend-app:${BUILD_TAG}
            echo " Frontend deployed successfully"
